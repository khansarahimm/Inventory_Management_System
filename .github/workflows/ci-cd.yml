name: Laravel CI/CD Pipeline

on:
  push:
    branches:
      - main  

jobs:
  build:
    name: Build Laravel Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, pdo, bcmath, mysql
          tools: composer

      - name: Install PHP Dependencies
        run: composer install --no-dev --optimize-autoloader

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Node.js Dependencies & Build Frontend
        run: |
          npm install
          npm run build

      - name: Start MySQL & Set Up Test Database
        run: |
          sudo systemctl start mysql
          mysql -u root -p'Admin@2025!?' -e 'CREATE DATABASE IF NOT EXISTS latest_db;'

      - name: Run Laravel Migrations & Tests
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: latest_db
          DB_USERNAME: root
          DB_PASSWORD: Admin@2025!?
        run: |
          php artisan migrate --force
          php artisan test

      - name: Archive Build Artifacts
        run: tar -cvzf build.tar.gz ./*

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: build.tar.gz

  deploy:
    name: Deploy Laravel to AWS EC2
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifact

      - name: Deploy to AWS EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "build.tar.gz"
          target: "/var/www/html/inventory_management_system"

      - name: Extract & Deploy on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/html/inventory_management_system
            tar -xvzf build.tar.gz
            rm build.tar.gz
            composer install --no-dev --optimize-autoloader
            php artisan migrate --force  # Runs Laravel migrations on RDS
            php artisan config:clear
            php artisan cache:clear
            php artisan route:cache
            php artisan view:cache
            sudo systemctl restart apache2  # Restart Apache server
