name: Deploy Laravel App

on:
  push:
    branches:
      - main  # Change to your branch if needed

jobs:
  deploy:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: inventory_management_system
          MYSQL_USER: laravel
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -h localhost --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, exif, pcntl, bcmath, gd, mysqli, pdo_mysql
          coverage: none

      - name: Install Composer Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Copy Environment File
        run: cp .env.example .env

      - name: Set Laravel Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Wait for MySQL to be Ready
        run: |
          echo "Waiting for MySQL..."
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done

      - name: Run Migrations
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: inventory_management_system
          DB_USERNAME: root
          DB_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        run: php artisan migrate --force

      - name: Clear Laravel Cache
        run: php artisan config:clear && php artisan cache:clear

      - name: Restart Services
        run: sudo systemctl restart nginx php8.1-fpm

      - name: Deployment Complete
        run: echo "âœ… Deployment successful!"
